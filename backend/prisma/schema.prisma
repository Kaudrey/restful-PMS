generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String        @id @default(uuid())
  name      String?       @default("N/A")
  email     String        @unique
  password  String
  role      Role          @default(USER)
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt

  ParkingSlot     ParkingSlot[]
  ParkingRequest  ParkingRequest[]
}

enum Role {
  ADMIN
  USER
}

model ParkingSlot {
  id         String         @id @default(uuid())
  slotNumber String         @unique
  location   String?        // Optional info like "Near Exit Gate"
  inUse      Boolean        @default(false)
  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @updatedAt
  userId     String?        // Optional: assigned user, can be null
  user       User?          @relation(fields: [userId], references: [id])

  ParkingRequest ParkingRequest[]
}

model ParkingRequest {
  id          String         @id @default(uuid())
  userId      String
  user        User           @relation(fields: [userId], references: [id])
  slotId      String
  slot        ParkingSlot    @relation(fields: [slotId], references: [id])
  status      RequestStatus  @default(PENDING)
  startTime   DateTime?
  endTime     DateTime?
  totalTime   Int?           // in minutes
  totalCharge Float?         
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt

  @@unique([userId, slotId, status])
  @@index([status])
}

enum RequestStatus {
  PENDING
  APPROVED
  REJECTED
  COMPLETED
}
